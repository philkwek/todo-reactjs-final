{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/FriendsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { XIcon } from '@heroicons/react/solid';\nimport $ from 'jquery';\nimport { data } from 'autoprefixer';\nimport FriendsItem from './FriendsItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendsList = props => {\n  _s();\n\n  const [friends, setFriends] = useState('');\n  const [friendContent, setFriendContent] = useState(''); //get friends list\n\n  if (friends == '') {\n    console.log(props.userId);\n    $.get(\"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/user/friends/\" + props.userId, function (data, status) {\n      const friendList = JSON.parse(data);\n      setFriends(friendList);\n    });\n  }\n\n  useEffect(() => {\n    if (friends.length > 0) {\n      console.log();\n      const friendsMapped = friends.map(data => /*#__PURE__*/_jsxDEV(FriendsItem, {\n        username: data.username,\n        friendId: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this));\n      console.log(friends);\n      setFriendContent(friendsMapped);\n    }\n\n    ;\n  }, [friends]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"flex flex-col mb-3\",\n    children: friendContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FriendsList, \"ZbKj0MslnJ06PNys6Ob2Y9lPokQ=\");\n\n_c = FriendsList;\nexport default FriendsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/FriendsList.js"],"names":["React","useState","useEffect","XIcon","$","data","FriendsItem","FriendsList","props","friends","setFriends","friendContent","setFriendContent","console","log","userId","get","status","friendList","JSON","parse","length","friendsMapped","map","username","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CAH2B,CAK3B;;AACA,MAAIQ,OAAO,IAAI,EAAf,EAAkB;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAlB;AACAX,IAAAA,CAAC,CAACY,GAAF,CAAM,gFAAgFR,KAAK,CAACO,MAA5F,EACA,UAASV,IAAT,EAAeY,MAAf,EAAsB;AAClB,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWf,IAAX,CAAnB;AACAK,MAAAA,UAAU,CAACQ,UAAD,CAAV;AACH,KAJD;AAKH;;AAEDhB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIO,OAAO,CAACY,MAAR,GAAiB,CAArB,EAAuB;AACnBR,MAAAA,OAAO,CAACC,GAAR;AACA,YAAMQ,aAAa,GAAGb,OAAO,CAACc,GAAR,CAAYlB,IAAI,iBACtC,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA,IAAI,CAACmB,QAA5B;AAAsC,QAAA,QAAQ,EAAEnB,IAAI,CAACoB;AAArD;AAAA;AAAA;AAAA;AAAA,cADsB,CAAtB;AAEAZ,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAG,MAAAA,gBAAgB,CAACU,aAAD,CAAhB;AACH;;AAAA;AACJ,GARQ,EAQP,CAACb,OAAD,CARO,CAAT;AAUA,sBACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BD;;GAAMJ,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {XIcon} from '@heroicons/react/solid';\nimport $ from 'jquery';\nimport { data } from 'autoprefixer';\nimport FriendsItem from './FriendsItem.js';\n\nconst FriendsList = (props) => {\n\n    const [friends, setFriends] = useState('');\n    const [friendContent, setFriendContent] = useState('');\n\n    //get friends list\n    if (friends == ''){\n        console.log(props.userId);\n        $.get(\"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/user/friends/\" + props.userId,\n        function(data, status){\n            const friendList = JSON.parse(data);\n            setFriends(friendList);\n        });\n    }\n\n    useEffect(()=>{\n        if (friends.length > 0){\n            console.log()\n            const friendsMapped = friends.map(data =>\n            <FriendsItem username={data.username} friendId={data.id} />)\n            console.log(friends);\n            setFriendContent(friendsMapped);\n        };\n    },[friends])\n\n    return(\n        <ul className=\"flex flex-col mb-3\">\n            {friendContent}\n        </ul>\n    )\n};\n\nexport default FriendsList;\n"]},"metadata":{},"sourceType":"module"}