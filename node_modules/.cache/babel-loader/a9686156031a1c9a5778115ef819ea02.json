{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport $ from 'jquery';\nimport '../index.css';\nimport Fade from 'react-reveal/Fade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItem = props => {\n  _s();\n\n  const [closeBtnState, setCloseBtnState] = useState('');\n  let originalStatus = false;\n\n  if (props.taskStatus === \"true\" || props.taskStatus === true) {\n    //checks taskStatus and sets checkbox accordingly\n    originalStatus = true;\n  }\n\n  const [taskStatus, setTaskStatus] = useState(originalStatus);\n\n  const taskCheckHandler = event => {\n    //checks task as done or undone\n    setTaskStatus(event.target.checked);\n    const taskCheckData = {\n      taskId: props.taskId,\n      taskDone: event.target.checked\n    };\n    props.onTaskChecked(taskCheckData);\n  };\n\n  const deleteTaskHandler = () => {\n    //deletes task from client by passing taskId to be deleted\n    props.onTaskDelete(props.taskId);\n  };\n\n  const toggleDeleteButton = () => {\n    //toggles delete todo button\n    if (closeBtnState === '') {\n      setCloseBtnState( /*#__PURE__*/_jsxDEV(Fade, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteTaskHandler,\n          type: \"button\",\n          className: \"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Close menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            \"aria-hidden\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this));\n    } else {\n      setCloseBtnState('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      id: props.taskId,\n      onDoubleClick: toggleDeleteButton,\n      className: \"flex flex-row items-center mb-5 w-full select-none\",\n      children: [closeBtnState, /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultChecked: taskStatus,\n        type: \"checkbox\",\n        onChange: taskCheckHandler,\n        className: \"w-4 h-4 rounded-full focus:ring-1 ml-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-5 h-5 rounded-full focus:ring-2 ml-3\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          viewBox: \"0 0 20 20\",\n          fill: \"#32a852\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"fill-rule\": \"evenodd\",\n            d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\",\n            \"clip-rule\": \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base font-medium\",\n          children: props.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: props.taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskItem, \"5O92FWQFnJEsPLftQIuvBqkcQg4=\");\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js"],"names":["React","useState","$","Fade","TaskItem","props","closeBtnState","setCloseBtnState","originalStatus","taskStatus","setTaskStatus","taskCheckHandler","event","target","checked","taskCheckData","taskId","taskDone","onTaskChecked","deleteTaskHandler","onTaskDelete","toggleDeleteButton","taskName","taskDescription"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport $ from 'jquery';\nimport '../index.css';\nimport Fade from 'react-reveal/Fade';\n\nconst TaskItem = (props) => {\n\n    const [closeBtnState, setCloseBtnState] = useState('');\n\n    let originalStatus = false;\n\n    if (props.taskStatus === \"true\" || props.taskStatus === true){ //checks taskStatus and sets checkbox accordingly\n        originalStatus = true;\n    }\n\n    const [taskStatus, setTaskStatus] = useState(originalStatus)\n\n    const taskCheckHandler = (event) => { //checks task as done or undone\n        setTaskStatus(event.target.checked); \n        const taskCheckData = {\n            taskId: props.taskId,\n            taskDone: event.target.checked\n        };\n        props.onTaskChecked(taskCheckData);\n    };\n\n    const deleteTaskHandler = () => { //deletes task from client by passing taskId to be deleted\n        props.onTaskDelete(props.taskId);\n    };\n\n    const toggleDeleteButton = () => { //toggles delete todo button\n        if(closeBtnState === ''){\n            setCloseBtnState(\n                <Fade>\n                    <button onClick={deleteTaskHandler} type=\"button\" className=\"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\">\n                        <span className=\"sr-only\">Close menu</span>\n                        <svg className=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                    </button>\n                </Fade>\n            )\n        } else {\n            setCloseBtnState('');\n        }\n    }\n\n    return (\n        <Fade>\n            <li id={props.taskId} onDoubleClick={toggleDeleteButton} className=\"flex flex-row items-center mb-5 w-full select-none\">\n                {closeBtnState}\n                <input defaultChecked={taskStatus} type=\"checkbox\" onChange={taskCheckHandler} className=\"w-4 h-4 rounded-full focus:ring-1 ml-3\" />\n                <button className=\"w-5 h-5 rounded-full focus:ring-2 ml-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"#32a852\">\n                        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </button>\n                <div className=\"ml-3\">\n                    <p className=\"text-base font-medium\">{props.taskName}</p>\n                    <p className=\"text-xs text-gray-500\">{props.taskDescription}</p>\n                </div>\n            </li>\n        </Fade>\n    );\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}