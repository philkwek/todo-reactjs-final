{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js\";\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  if (props.tasks.length > 0) {\n    let key = 0;\n    var taskContent = props.tasks.map(data => /*#__PURE__*/_jsxDEV(TaskItem, {\n      onTaskChecked: taskCheckedHandler,\n      taskTitle: data.taskTitle,\n      taskDetails: data.taskDetails\n    }, key += 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this));\n  }\n\n  return {\n    taskContent\n  };\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js"],"names":["React","useState","TaskItem","TaskList","props","tasks","length","key","taskContent","map","data","taskCheckedHandler","taskTitle","taskDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,WAAW,GAAGJ,KAAK,CAACC,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,iBAClC,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEC,kBAAzB;AAA4D,MAAA,SAAS,EAAID,IAAI,CAACE,SAA9E;AAAyF,MAAA,WAAW,EAAIF,IAAI,CAACG;AAA7G,OAAkDN,GAAG,IAAI,CAAzD;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAEH;;AACD,SACI;AAACC,IAAAA;AAAD,GADJ;AAGH,CAVD;;KAAML,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\n\nconst TaskList = (props) => {\n\n    if (props.tasks.length > 0){\n        let key = 0;\n        var taskContent = props.tasks.map((data) =>\n        <TaskItem onTaskChecked={taskCheckedHandler} key={key += 1} taskTitle = {data.taskTitle} taskDetails = {data.taskDetails}></TaskItem>)\n    }\n    return (\n        {taskContent}\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}