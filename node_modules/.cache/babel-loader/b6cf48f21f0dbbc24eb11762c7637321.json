{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItem = props => {\n  _s();\n\n  if (props.taskStatus === \"true\" || props.taskStatus === true && taskStatus != true) {\n    taskStatus;\n  }\n\n  const [taskStatus, setTaskStatus] = useState(props.taskStatus);\n\n  const taskCheckHandler = event => {\n    const taskCheckData = {\n      taskId: props.taskId,\n      taskDone: event.target.checked\n    };\n    props.onTaskChecked(taskCheckData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row items-center mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: taskStatus,\n      id: \"taskCheckStatus\",\n      type: \"checkbox\",\n      onChange: taskCheckHandler,\n      className: \"w-4 h-4 rounded-full focus:ring-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base font-medium\",\n        children: props.taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500\",\n        children: props.taskDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskItem, \"DOl5UAcPDKjtSIsieFTjbgOYagI=\");\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js"],"names":["React","useState","TaskItem","props","taskStatus","setTaskStatus","taskCheckHandler","event","taskCheckData","taskId","taskDone","target","checked","onTaskChecked","taskName","taskDescription"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAGxB,MAAIA,KAAK,CAACC,UAAN,KAAqB,MAArB,IAA+BD,KAAK,CAACC,UAAN,KAAqB,IAArB,IAA6BA,UAAU,IAAE,IAA5E,EAAiF;AAC7EA,IAAAA,UAAU;AACb;;AAED,QAAM,CAACA,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAACE,KAAK,CAACC,UAAP,CAA5C;;AAEA,QAAME,gBAAgB,GAAIC,KAAD,IAAW;AAChC,UAAMC,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAEN,KAAK,CAACM,MADI;AAElBC,MAAAA,QAAQ,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAFL,KAAtB;AAIAT,IAAAA,KAAK,CAACU,aAAN,CAAoBL,aAApB;AACH,GAND;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEJ,UAAhB;AAA4B,MAAA,EAAE,EAAC,iBAA/B;AAAiD,MAAA,IAAI,EAAC,UAAtD;AAAiE,MAAA,QAAQ,EAAEE,gBAA3E;AAA6F,MAAA,SAAS,EAAC;AAAvG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCH,KAAK,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCX,KAAK,CAACY;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3BD;;GAAMb,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst TaskItem = (props) => {\n\n\n    if (props.taskStatus === \"true\" || props.taskStatus === true && taskStatus!=true){\n        taskStatus\n    }\n\n    const [taskStatus, setTaskStatus] = useState(props.taskStatus)\n\n    const taskCheckHandler = (event) => {\n        const taskCheckData = {\n            taskId: props.taskId,\n            taskDone: event.target.checked\n        };\n        props.onTaskChecked(taskCheckData);\n    };\n\n\n    return (\n        <div className=\"flex flex-row items-center mb-5\">\n            <input checked={taskStatus} id=\"taskCheckStatus\" type=\"checkbox\" onChange={taskCheckHandler} className=\"w-4 h-4 rounded-full focus:ring-1\" />\n            <div className=\"ml-3\">\n                <p className=\"text-base font-medium\">{props.taskName}</p>\n                <p className=\"text-xs text-gray-500\">{props.taskDescription}</p>\n             </div>\n        </div>\n    );\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}