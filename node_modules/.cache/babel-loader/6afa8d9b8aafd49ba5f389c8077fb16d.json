{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js\";\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  console.log(props);\n\n  let taskContent = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No Tasks!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n\n  const taskCheckedHandler = event => {\n    props.onTaskChecked(event);\n  }; // if(props.tasks){\n  //     if (props.tasks.length > 0){\n  //         let key = 0;\n  //         taskContent = props.tasks.map(data =>\n  //         <TaskItem onTaskChecked={taskCheckedHandler} key={key += 1} taskName = {data.taskName} taskDescription = {data.taskDescription}></TaskItem>)\n  //     }\n  // };\n\n\n  return {\n    taskContent\n  };\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js"],"names":["React","useState","TaskItem","TaskList","props","console","log","taskContent","taskCheckedHandler","event","onTaskChecked"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,MAAIG,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAEA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClCL,IAAAA,KAAK,CAACM,aAAN,CAAoBD,KAApB;AACH,GAFD,CAJwB,CAQxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACI;AAACF,IAAAA;AAAD,GADJ;AAGH,CAnBD;;KAAMJ,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\n\nconst TaskList = (props) => {\n    console.log(props);\n    let taskContent = <h1>No Tasks!</h1>;\n\n    const taskCheckedHandler = (event) => {\n        props.onTaskChecked(event);\n    };\n\n    // if(props.tasks){\n    //     if (props.tasks.length > 0){\n    //         let key = 0;\n    //         taskContent = props.tasks.map(data =>\n    //         <TaskItem onTaskChecked={taskCheckedHandler} key={key += 1} taskName = {data.taskName} taskDescription = {data.taskDescription}></TaskItem>)\n    //     }\n    // };\n\n    return (\n        {taskContent}\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}