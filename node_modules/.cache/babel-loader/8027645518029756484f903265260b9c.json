{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport TaskList from './TaskList.js';\nimport TaskHeader from './TaskHeader.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskDisplay = props => {\n  _s();\n\n  const originalData = props.tasks;\n  const [allTasks, setAllTasks] = useState(props.tasks);\n  React.useEffect(() => {\n    setAllTasks(allTasks);\n  }, [allTasks]);\n\n  const TaskCheckHandler = event => {\n    props.onTaskChecked(event);\n  };\n\n  const TaskDeleteHandler = taskId => {\n    props.onTaskDelete(taskId);\n  };\n\n  const PriorityUpdateHandler = data => {\n    props.onPriorityUpdate(data);\n  };\n\n  const TaskFilterHandler = tasks => {\n    setAllTasks(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskHeader, {\n      onTaskFilter: TaskFilterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(TaskList, {\n        onTaskDelete: TaskDeleteHandler,\n        onTaskChecked: TaskCheckHandler,\n        onPriorityUpdate: PriorityUpdateHandler,\n        tasks: allTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskDisplay, \"HMMWNGBECqhIO4uaiGFZG31X0Ac=\");\n\n_c = TaskDisplay;\nexport default TaskDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDisplay\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskDisplay.js"],"names":["React","useState","useEffect","TaskList","TaskHeader","TaskDisplay","props","originalData","tasks","allTasks","setAllTasks","TaskCheckHandler","event","onTaskChecked","TaskDeleteHandler","taskId","onTaskDelete","PriorityUpdateHandler","data","onPriorityUpdate","TaskFilterHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAA3B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACK,KAAK,CAACE,KAAP,CAAxC;AAEAR,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAI;AAChBQ,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAFD,EAEE,CAACA,QAAD,CAFF;;AAIA,QAAME,gBAAgB,GAAIC,KAAD,IAAW;AAChCN,IAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIC,MAAD,IAAY;AAClCT,IAAAA,KAAK,CAACU,YAAN,CAAmBD,MAAnB;AACH,GAFD;;AAIA,QAAME,qBAAqB,GAAIC,IAAD,IAAU;AACpCZ,IAAAA,KAAK,CAACa,gBAAN,CAAuBD,IAAvB;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIZ,KAAD,IAAW;AACjCE,IAAAA,WAAW,CAACF,KAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEY;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEN,iBAAxB;AAA2C,QAAA,aAAa,EAAEH,gBAA1D;AAA4E,QAAA,gBAAgB,EAAEM,qBAA9F;AACA,QAAA,KAAK,EAAER;AADP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjCD;;GAAMJ,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../index.css';\nimport TaskList from './TaskList.js';\nimport TaskHeader from './TaskHeader.js';\n\nconst TaskDisplay = (props) => {\n    const originalData = props.tasks;\n    const [allTasks, setAllTasks] = useState(props.tasks);\n    \n    React.useEffect(()=>{\n        setAllTasks(allTasks);\n    },[allTasks])\n\n    const TaskCheckHandler = (event) => {\n        props.onTaskChecked(event);\n    };\n\n    const TaskDeleteHandler = (taskId) => {\n        props.onTaskDelete(taskId);\n    };\n\n    const PriorityUpdateHandler = (data) => {\n        props.onPriorityUpdate(data);\n    };\n\n    const TaskFilterHandler = (tasks) => {\n        setAllTasks(tasks);\n    };\n\n    return (\n        <div>\n            <TaskHeader onTaskFilter={TaskFilterHandler} />\n            <div className=\"flex flex-row items-center mt-5\">\n                <TaskList onTaskDelete={TaskDeleteHandler} onTaskChecked={TaskCheckHandler} onPriorityUpdate={PriorityUpdateHandler}\n                tasks={allTasks} />\n            </div>\n        </div>\n    );\n};\n\nexport default TaskDisplay;\n"]},"metadata":{},"sourceType":"module"}