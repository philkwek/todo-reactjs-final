{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js\";\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  let taskContent = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No Tasks!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 23\n  }, this);\n\n  const taskCheckedHandler = event => {\n    console.log(event);\n    props.onTaskChecked(event);\n  };\n\n  if (props.tasks) {\n    if (props.tasks.length > 0) {\n      let key = 0;\n      taskContent = props.tasks.map(data => /*#__PURE__*/_jsxDEV(TaskItem, {\n        onTaskChecked: taskCheckedHandler,\n        taskId: data.id,\n        taskName: data.taskName,\n        taskDescription: data.taskDescription\n      }, key += 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js"],"names":["React","useState","TaskItem","TaskList","props","taskContent","taskCheckedHandler","event","console","log","onTaskChecked","tasks","length","key","map","data","id","taskName","taskDescription"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,MAAIC,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAEA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,KAAK,CAACM,aAAN,CAAoBH,KAApB;AACH,GAHD;;AAKA,MAAGH,KAAK,CAACO,KAAT,EAAe;AACX,QAAIP,KAAK,CAACO,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,UAAIC,GAAG,GAAG,CAAV;AACAR,MAAAA,WAAW,GAAGD,KAAK,CAACO,KAAN,CAAYG,GAAZ,CAAgBC,IAAI,iBAClC,QAAC,QAAD;AAAU,QAAA,aAAa,EAAET,kBAAzB;AAA4D,QAAA,MAAM,EAAIS,IAAI,CAACC,EAA3E;AAA+E,QAAA,QAAQ,EAAID,IAAI,CAACE,QAAhG;AAA0G,QAAA,eAAe,EAAIF,IAAI,CAACG;AAAlI,SAAkDL,GAAG,IAAI,CAAzD;AAAA;AAAA;AAAA;AAAA,cADc,CAAd;AAEH;AACJ;;AAAA;AAED,sBACI;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;KAAMF,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\n\nconst TaskList = (props) => {\n    let taskContent = <h1>No Tasks!</h1>;\n\n    const taskCheckedHandler = (event) => {\n        console.log(event);\n        props.onTaskChecked(event);\n    };\n\n    if(props.tasks){\n        if (props.tasks.length > 0){\n            let key = 0;\n            taskContent = props.tasks.map(data =>\n            <TaskItem onTaskChecked={taskCheckedHandler} key={key += 1} taskId = {data.id} taskName = {data.taskName} taskDescription = {data.taskDescription}></TaskItem>)\n        }\n    };\n\n    return (\n        <div>\n            {taskContent}\n        </div>\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}