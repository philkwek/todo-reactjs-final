{"ast":null,"code":"import TaskItem from'./TaskItem.js';import'../index.css';import{jsx as _jsx}from\"react/jsx-runtime\";var TaskList=function TaskList(props){var taskContent=/*#__PURE__*/_jsx(\"h1\",{children:\"No Tasks!\"});var taskCheckedHandler=function taskCheckedHandler(event){props.onTaskChecked(event);};if(props.tasks){if(props.tasks.length>0){var key=0;taskContent=props.tasks.map(function(data){return/*#__PURE__*/_jsx(TaskItem,{onTaskChecked:taskCheckedHandler,taskStatus:data.taskStatus,taskId:data.id,taskName:data.taskName,taskDescription:data.taskDescription},key+=1);});}};return/*#__PURE__*/_jsx(\"div\",{children:taskContent});};export default TaskList;","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js"],"names":["TaskItem","TaskList","props","taskContent","taskCheckedHandler","event","onTaskChecked","tasks","length","key","map","data","taskStatus","id","taskName","taskDescription"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,eAArB,CACA,MAAO,cAAP,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,GAAIC,CAAAA,WAAW,cAAG,iCAAlB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAClCH,KAAK,CAACI,aAAN,CAAoBD,KAApB,EACH,CAFD,CAIA,GAAGH,KAAK,CAACK,KAAT,CAAe,CACX,GAAIL,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAqB,CAAzB,CAA2B,CACvB,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACAN,WAAW,CAAGD,KAAK,CAACK,KAAN,CAAYG,GAAZ,CAAgB,SAAAC,IAAI,qBAClC,KAAC,QAAD,EAAU,aAAa,CAAEP,kBAAzB,CAA4D,UAAU,CAAGO,IAAI,CAACC,UAA9E,CAA0F,MAAM,CAAID,IAAI,CAACE,EAAzG,CAA6G,QAAQ,CAAIF,IAAI,CAACG,QAA9H,CAAwI,eAAe,CAAIH,IAAI,CAACI,eAAhK,EAAkDN,GAAG,EAAI,CAAzD,CADkC,EAApB,CAAd,CAEH,CACJ,EAED,mBACI,qBACKN,WADL,EADJ,CAKH,CApBD,CAsBA,cAAeF,CAAAA,QAAf","sourcesContent":["import TaskItem from './TaskItem.js';\nimport '../index.css';\n\nconst TaskList = (props) => {\n    let taskContent = <h1>No Tasks!</h1>;\n\n    const taskCheckedHandler = (event) => {\n        props.onTaskChecked(event);\n    };\n\n    if(props.tasks){\n        if (props.tasks.length > 0){\n            let key = 0;\n            taskContent = props.tasks.map(data =>\n            <TaskItem onTaskChecked={taskCheckedHandler} key={key += 1} taskStatus ={data.taskStatus} taskId = {data.id} taskName = {data.taskName} taskDescription = {data.taskDescription}></TaskItem>)\n        }\n    };\n\n    return (\n        <div>\n            {taskContent}\n        </div>\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}