{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport $ from \"jquery\";\nimport \"../index.css\";\nimport \"../components/css/TaskItem.css\";\nimport Fade from \"react-reveal/Fade\";\nimport { CheckIcon, CogIcon } from \"@heroicons/react/solid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnStates = [/*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"w-5 h-5 rounded-full border-2 border-gray-500\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this),\n/*#__PURE__*/\n//undone task\n_jsxDEV(CogIcon, {\n  className: \"w-5 h-5 text-white bg-yellow-400 rounded-full\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this),\n/*#__PURE__*/\n//in-progress task\n_jsxDEV(CheckIcon, {\n  className: \"w-5 h-5 text-white bg-green-700 rounded-full\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this) //done task\n];\n\nconst TaskItem = props => {\n  _s();\n\n  const firstRender = useRef(false);\n  const [taskMenuState, setTaskMenuState] = useState(\"\");\n  const [taskBtnState, setTaskBtnState] = useState(btnStates[props.taskStatus]);\n  const [taskStatusNo, setTaskStatusNo] = useState(props.taskStatus);\n  const [taskPriority, setTaskPriority] = useState(props.taskPriority);\n\n  const ChangeStatusHandler = () => {\n    if (taskStatusNo == 0) {\n      setTaskBtnState(btnStates[1]);\n      setTaskStatusNo(1);\n    } else if (taskStatusNo == 1) {\n      setTaskBtnState(btnStates[2]);\n      setTaskStatusNo(2);\n    } else if (taskStatusNo == 2) {\n      setTaskBtnState(btnStates[0]);\n      setTaskStatusNo(0);\n    }\n  };\n\n  useEffect(() => {\n    if (firstRender.current) {\n      const taskCheckData = {\n        taskId: props.taskId,\n        taskDone: taskStatusNo\n      };\n      props.onTaskChecked(taskCheckData);\n    } else {\n      firstRender.current = true;\n    }\n  }, [props, taskStatusNo]);\n\n  const DeleteTaskHandler = () => {\n    //deletes task from client by passing taskId to be deleted\n    props.onTaskDelete(props.taskId);\n  };\n\n  const TaskPriorityHandler = event => {\n    setTaskPriority(event.target.value);\n  };\n\n  useEffect(() => {//updates priority value\n  }, [taskPriority]);\n\n  const ToggleTaskMenu = () => {\n    //toggles delete todo button\n    if (taskMenuState === \"\") {\n      setTaskMenuState( /*#__PURE__*/_jsxDEV(Fade, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row align-middle items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: DeleteTaskHandler,\n            type: \"button\",\n            className: \"ml-3 bg-white rounded-full items-center justify-center  text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 w-4 h-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Close menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-4 w-4\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              \"aria-hidden\": \"true\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    } else {\n      setTaskMenuState(\"\");\n    }\n  };\n\n  const TaskUpdateHandler = () => {\n    //update priority if there is a change\n    if (taskPriority != props.taskPriority) {\n      let newData = {\n        taskPriority: taskPriority,\n        taskDescription: props.taskDescription,\n        taskName: props.taskName,\n        taskStatus: taskStatusNo\n      }; //updates server\n\n      $.ajax({\n        url: \"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/tasks/\" + props.taskId,\n        type: \"PUT\",\n        data: newData,\n        success: function () {\n          console.log(\"Update success\");\n        }\n      });\n      newData = { ...newData,\n        taskId: props.taskId\n      }; //updates client\n\n      props.onPriorityUpdate(newData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      id: props.taskId,\n      onDoubleClick: ToggleTaskMenu,\n      className: \"flex flex-row items-center mb-6 w-full select-none\",\n      children: [taskMenuState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ChangeStatusHandler,\n        className: \"w-5 h-5 rounded-full focus:ring-2 ml-3\",\n        children: taskBtnState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"priority-list appearance-none h-8 border-0 text-xs text-center\",\n          defaultValue: taskPriority,\n          onChange: TaskPriorityHandler,\n          onBlur: TaskUpdateHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base font-medium\",\n          children: props.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: props.taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskItem, \"bhP3kpE0qSdAdNe2MuvOpdHH2wc=\");\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js"],"names":["React","useState","useEffect","useRef","$","Fade","CheckIcon","CogIcon","btnStates","TaskItem","props","firstRender","taskMenuState","setTaskMenuState","taskBtnState","setTaskBtnState","taskStatus","taskStatusNo","setTaskStatusNo","taskPriority","setTaskPriority","ChangeStatusHandler","current","taskCheckData","taskId","taskDone","onTaskChecked","DeleteTaskHandler","onTaskDelete","TaskPriorityHandler","event","target","value","ToggleTaskMenu","TaskUpdateHandler","newData","taskDescription","taskName","ajax","url","type","data","success","console","log","onPriorityUpdate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,cAAP;AACA,OAAO,gCAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,wBAAnC;;AAEA,MAAMC,SAAS,GAAG,cAChB;AAAK,EAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,QADgB;AAAA;AACuD;AACvE,QAAC,OAAD;AAAS,EAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,QAFgB;AAAA;AAEuD;AACvE,QAAC,SAAD;AAAW,EAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,QAHgB,CAGwD;AAHxD,CAAlB;;AAMA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,WAAW,GAAGR,MAAM,CAAC,KAAD,CAA1B;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACO,SAAS,CAACE,KAAK,CAACM,UAAP,CAAV,CAAhD;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACS,KAAK,CAACM,UAAP,CAAhD;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAACS,KAAK,CAACS,YAAP,CAAhD;;AAEA,QAAME,mBAAmB,GAAG,MAAM;AAChC,QAAIJ,YAAY,IAAI,CAApB,EAAuB;AACrBF,MAAAA,eAAe,CAACP,SAAS,CAAC,CAAD,CAAV,CAAf;AACAU,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAHD,MAGO,IAAID,YAAY,IAAI,CAApB,EAAuB;AAC5BF,MAAAA,eAAe,CAACP,SAAS,CAAC,CAAD,CAAV,CAAf;AACAU,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAHM,MAGA,IAAID,YAAY,IAAI,CAApB,EAAuB;AAC5BF,MAAAA,eAAe,CAACP,SAAS,CAAC,CAAD,CAAV,CAAf;AACAU,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD;AACF,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,WAAW,CAACW,OAAhB,EAAyB;AACvB,YAAMC,aAAa,GAAG;AACpBC,QAAAA,MAAM,EAAEd,KAAK,CAACc,MADM;AAEpBC,QAAAA,QAAQ,EAAER;AAFU,OAAtB;AAIAP,MAAAA,KAAK,CAACgB,aAAN,CAAoBH,aAApB;AACD,KAND,MAMO;AACLZ,MAAAA,WAAW,CAACW,OAAZ,GAAsB,IAAtB;AACD;AACF,GAVQ,EAUN,CAACZ,KAAD,EAAQO,YAAR,CAVM,CAAT;;AAYA,QAAMU,iBAAiB,GAAG,MAAM;AAC9B;AACAjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBlB,KAAK,CAACc,MAAzB;AACD,GAHD;;AAKA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCV,IAAAA,eAAe,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA9B,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,CAACiB,YAAD,CAFM,CAAT;;AAIA,QAAMc,cAAc,GAAG,MAAM;AAC3B;AACA,QAAIrB,aAAa,KAAK,EAAtB,EAA0B;AACxBC,MAAAA,gBAAgB,eACd,QAAC,IAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA,iCACE;AACE,YAAA,OAAO,EAAEc,iBADX;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAC,yKAHZ;AAAA,oCAME;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AACE,cAAA,SAAS,EAAC,SADZ;AAEE,cAAA,KAAK,EAAC,4BAFR;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,OAAO,EAAC,WAJV;AAKE,cAAA,MAAM,EAAC,cALT;AAME,6BAAY,MANd;AAAA,qCAQE;AACE,gBAAA,aAAa,EAAC,OADhB;AAEE,gBAAA,cAAc,EAAC,OAFjB;AAGE,gBAAA,WAAW,EAAC,GAHd;AAIE,gBAAA,CAAC,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADc,CAAhB;AA6BD,KA9BD,MA8BO;AACLd,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GAnCD;;AAqCA,QAAMqB,iBAAiB,GAAG,MAAM;AAC9B;AACA,QAAIf,YAAY,IAAIT,KAAK,CAACS,YAA1B,EAAwC;AACtC,UAAIgB,OAAO,GAAG;AACZhB,QAAAA,YAAY,EAAEA,YADF;AAEZiB,QAAAA,eAAe,EAAE1B,KAAK,CAAC0B,eAFX;AAGZC,QAAAA,QAAQ,EAAE3B,KAAK,CAAC2B,QAHJ;AAIZrB,QAAAA,UAAU,EAAEC;AAJA,OAAd,CADsC,CAQtC;;AACAb,MAAAA,CAAC,CAACkC,IAAF,CAAO;AACLC,QAAAA,GAAG,EACD,yEACA7B,KAAK,CAACc,MAHH;AAILgB,QAAAA,IAAI,EAAE,KAJD;AAKLC,QAAAA,IAAI,EAAEN,OALD;AAMLO,QAAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AARI,OAAP;AAWAT,MAAAA,OAAO,GAAG,EACR,GAAGA,OADK;AAERX,QAAAA,MAAM,EAAEd,KAAK,CAACc;AAFN,OAAV,CApBsC,CAwBtC;;AACAd,MAAAA,KAAK,CAACmC,gBAAN,CAAuBV,OAAvB;AACD;AACF,GA7BD;;AA+BA,sBACE,QAAC,IAAD;AAAA,2BACE;AACE,MAAA,EAAE,EAAEzB,KAAK,CAACc,MADZ;AAEE,MAAA,aAAa,EAAES,cAFjB;AAGE,MAAA,SAAS,EAAC,oDAHZ;AAAA,iBAKGrB,aALH,eAME;AACE,QAAA,OAAO,EAAES,mBADX;AAEE,QAAA,SAAS,EAAC,wCAFZ;AAAA,kBAIGP;AAJH;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,gEADZ;AAEE,UAAA,YAAY,EAAEK,YAFhB;AAGE,UAAA,QAAQ,EAAEU,mBAHZ;AAIE,UAAA,MAAM,EAAEK,iBAJV;AAAA,kCAME;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,eAwBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCxB,KAAK,CAAC2B;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsC3B,KAAK,CAAC0B;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CApJD;;GAAM3B,Q;;KAAAA,Q;AAsJN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport $ from \"jquery\";\nimport \"../index.css\";\nimport \"../components/css/TaskItem.css\";\nimport Fade from \"react-reveal/Fade\";\nimport { CheckIcon, CogIcon } from \"@heroicons/react/solid\";\n\nconst btnStates = [\n  <div className=\"w-5 h-5 rounded-full border-2 border-gray-500\"></div>, //undone task\n  <CogIcon className=\"w-5 h-5 text-white bg-yellow-400 rounded-full\" />, //in-progress task\n  <CheckIcon className=\"w-5 h-5 text-white bg-green-700 rounded-full\" />, //done task\n];\n\nconst TaskItem = (props) => {\n  const firstRender = useRef(false);\n\n  const [taskMenuState, setTaskMenuState] = useState(\"\");\n  const [taskBtnState, setTaskBtnState] = useState(btnStates[props.taskStatus]);\n\n  const [taskStatusNo, setTaskStatusNo] = useState(props.taskStatus);\n  const [taskPriority, setTaskPriority] = useState(props.taskPriority);\n\n  const ChangeStatusHandler = () => {\n    if (taskStatusNo == 0) {\n      setTaskBtnState(btnStates[1]);\n      setTaskStatusNo(1);\n    } else if (taskStatusNo == 1) {\n      setTaskBtnState(btnStates[2]);\n      setTaskStatusNo(2);\n    } else if (taskStatusNo == 2) {\n      setTaskBtnState(btnStates[0]);\n      setTaskStatusNo(0);\n    }\n  };\n\n  useEffect(() => {\n    if (firstRender.current) {\n      const taskCheckData = {\n        taskId: props.taskId,\n        taskDone: taskStatusNo,\n      };\n      props.onTaskChecked(taskCheckData);\n    } else {\n      firstRender.current = true;\n    }\n  }, [props, taskStatusNo]);\n\n  const DeleteTaskHandler = () => {\n    //deletes task from client by passing taskId to be deleted\n    props.onTaskDelete(props.taskId);\n  };\n\n  const TaskPriorityHandler = (event) => {\n    setTaskPriority(event.target.value);\n  };\n\n  useEffect(() => {\n    //updates priority value\n  }, [taskPriority]);\n\n  const ToggleTaskMenu = () => {\n    //toggles delete todo button\n    if (taskMenuState === \"\") {\n      setTaskMenuState(\n        <Fade>\n          <div className=\"flex flex-row align-middle items-center\">\n            <button\n              onClick={DeleteTaskHandler}\n              type=\"button\"\n              className=\"ml-3 bg-white rounded-full items-center justify-center \n                        text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 w-4 h-4\"\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <svg\n                className=\"h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n        </Fade>\n      );\n    } else {\n      setTaskMenuState(\"\");\n    }\n  };\n\n  const TaskUpdateHandler = () => {\n    //update priority if there is a change\n    if (taskPriority != props.taskPriority) {\n      let newData = {\n        taskPriority: taskPriority,\n        taskDescription: props.taskDescription,\n        taskName: props.taskName,\n        taskStatus: taskStatusNo,\n      };\n\n      //updates server\n      $.ajax({\n        url:\n          \"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/tasks/\" +\n          props.taskId,\n        type: \"PUT\",\n        data: newData,\n        success: function () {\n          console.log(\"Update success\");\n        },\n      });\n\n      newData = {\n        ...newData,\n        taskId: props.taskId,\n      };\n      //updates client\n      props.onPriorityUpdate(newData);\n    }\n  };\n\n  return (\n    <Fade>\n      <li\n        id={props.taskId}\n        onDoubleClick={ToggleTaskMenu}\n        className=\"flex flex-row items-center mb-6 w-full select-none\"\n      >\n        {taskMenuState}\n        <button\n          onClick={ChangeStatusHandler}\n          className=\"w-5 h-5 rounded-full focus:ring-2 ml-3\"\n        >\n          {taskBtnState}\n        </button>\n        <div className=\"ml-3\">\n          <select\n            className=\"priority-list appearance-none h-8 border-0 text-xs text-center\"\n            defaultValue={taskPriority}\n            onChange={TaskPriorityHandler}\n            onBlur={TaskUpdateHandler}\n          >\n            <option value=\"0\">!</option>\n            <option value=\"1\">!!</option>\n            <option value=\"2\">!!!</option>\n          </select>\n        </div>\n        <div className=\"ml-3\">\n          <p className=\"text-base font-medium\">{props.taskName}</p>\n          <p className=\"text-xs text-gray-500\">{props.taskDescription}</p>\n        </div>\n      </li>\n    </Fade>\n  );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}