{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  let taskContent;\n\n  if (props.username == '') {\n    taskContent = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in or Create an Account to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this);\n  } else {\n    taskContent = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Tasks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }, this);\n  }\n\n  const TaskDeleteHandler = taskId => {\n    props.onTaskDelete(taskId);\n  };\n\n  const DateUpdateHandler = date => {\n    props.onDateUpdate(date);\n  };\n\n  if (props.tasks) {\n    if (props.tasks.length > 0) {\n      let key = 0;\n      taskContent = props.tasks.map(data => /*#__PURE__*/_jsxDEV(TaskItem, {\n        onDateUpdate: DateUpdateHandler,\n        onTaskDelete: TaskDeleteHandler,\n        taskPrivate: props.taskPrivate,\n        userId: props.userId,\n        taskPriority: data.taskPriority,\n        taskStatus: data.taskStatus,\n        taskDate: data.taskDate,\n        taskId: data.id,\n        taskName: data.taskName,\n        taskDescription: data.taskDescription\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: taskContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskList.js"],"names":["React","useState","useEffect","TaskItem","TaskList","props","taskContent","username","TaskDeleteHandler","taskId","onTaskDelete","DateUpdateHandler","date","onDateUpdate","tasks","length","key","map","data","taskPrivate","userId","taskPriority","taskStatus","taskDate","id","taskName","taskDescription"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,MAAIC,WAAJ;;AAEA,MAAID,KAAK,CAACE,QAAN,IAAkB,EAAtB,EAAyB;AACrBD,IAAAA,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AACH,GAFD,MAEO;AACHA,IAAAA,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AACH;;AAED,QAAME,iBAAiB,GAAIC,MAAD,IAAY;AAClCJ,IAAAA,KAAK,CAACK,YAAN,CAAmBD,MAAnB;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIC,IAAD,IAAU;AAChCP,IAAAA,KAAK,CAACQ,YAAN,CAAmBD,IAAnB;AACH,GAFD;;AAIA,MAAGP,KAAK,CAACS,KAAT,EAAe;AACX,QAAIT,KAAK,CAACS,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,UAAIC,GAAG,GAAG,CAAV;AACAV,MAAAA,WAAW,GAAGD,KAAK,CAACS,KAAN,CAAYG,GAAZ,CAAgBC,IAAI,iBAClC,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEP,iBAAxB;AACA,QAAA,YAAY,EAAEH,iBADd;AACiC,QAAA,WAAW,EAAEH,KAAK,CAACc,WADpD;AACiE,QAAA,MAAM,EAAEd,KAAK,CAACe,MAD/E;AAEc,QAAA,YAAY,EAAEF,IAAI,CAACG,YAFjC;AAE+C,QAAA,UAAU,EAAGH,IAAI,CAACI,UAFjE;AAE6E,QAAA,QAAQ,EAAEJ,IAAI,CAACK,QAF5F;AAGA,QAAA,MAAM,EAAIL,IAAI,CAACM,EAHf;AAGmB,QAAA,QAAQ,EAAIN,IAAI,CAACO,QAHpC;AAG8C,QAAA,eAAe,EAAIP,IAAI,CAACQ;AAHtE,SAEKR,IAAI,CAACM,EAFV;AAAA;AAAA;AAAA;AAAA,cADc,CAAd;AAKH;AACJ;;AAAA;AAED,sBACI;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;KAAMF,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport TaskItem from './TaskItem.js';\nimport '../index.css';\n\nconst TaskList = (props) => {\n    let taskContent;\n\n    if (props.username == ''){\n        taskContent = <h1>Log in or Create an Account to get started!</h1>;\n    } else {\n        taskContent = <h1>No Tasks!</h1>;\n    }\n\n    const TaskDeleteHandler = (taskId) => {\n        props.onTaskDelete(taskId);\n    }\n\n    const DateUpdateHandler = (date) => {\n        props.onDateUpdate(date);\n    }\n\n    if(props.tasks){\n        if (props.tasks.length > 0){\n            let key = 0;\n            taskContent = props.tasks.map(data =>\n            <TaskItem onDateUpdate={DateUpdateHandler}\n            onTaskDelete={TaskDeleteHandler} taskPrivate={props.taskPrivate} userId={props.userId}\n            key={data.id} taskPriority={data.taskPriority} taskStatus ={data.taskStatus} taskDate={data.taskDate}\n            taskId = {data.id} taskName = {data.taskName} taskDescription = {data.taskDescription}></TaskItem>)\n        }\n    };\n\n    return (\n        <ul>\n            {taskContent}\n        </ul>\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}