{"ast":null,"code":"import _slicedToArray from\"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import $ from'jquery';import'../index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskItem=function TaskItem(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),closeBtnState=_useState2[0],setCloseBtnState=_useState2[1];var originalStatus=false;if(props.taskStatus===\"true\"||props.taskStatus===true){//checks taskStatus and sets checkbox accordingly\noriginalStatus=true;}var _useState3=useState(originalStatus),_useState4=_slicedToArray(_useState3,2),taskStatus=_useState4[0],setTaskStatus=_useState4[1];var taskCheckHandler=function taskCheckHandler(event){//checks task as done or undone\nsetTaskStatus(event.target.checked);var taskCheckData={taskId:props.taskId,taskDone:event.target.checked};props.onTaskChecked(taskCheckData);};var deleteTaskHandler=function deleteTaskHandler(){//deletes task from client by passing taskId to be deleted\nprops.onTaskDelete(props.taskId);};var toggleDeleteButton=function toggleDeleteButton(){//toggles delete todo button\nif(closeBtnState===''){setCloseBtnState(/*#__PURE__*/_jsxs(\"button\",{onClick:deleteTaskHandler,type:\"button\",className:\"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Close menu\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"h-4 w-4\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})]}));}else{setCloseBtnState('');}};return/*#__PURE__*/_jsxs(\"li\",{id:props.taskId,onDoubleClick:toggleDeleteButton,className:\"flex flex-row items-center mb-5 w-full select-none\",children:[closeBtnState,/*#__PURE__*/_jsx(\"input\",{defaultChecked:taskStatus,id:\"taskCheckStatus\",type:\"checkbox\",onChange:taskCheckHandler,className:\"w-4 h-4 rounded-full focus:ring-1 ml-3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-base font-medium\",children:props.taskName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:props.taskDescription})]})]});};export default TaskItem;","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskItem.js"],"names":["React","useState","$","TaskItem","props","closeBtnState","setCloseBtnState","originalStatus","taskStatus","setTaskStatus","taskCheckHandler","event","target","checked","taskCheckData","taskId","taskDone","onTaskChecked","deleteTaskHandler","onTaskDelete","toggleDeleteButton","taskName","taskDescription"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAExB,cAA0CH,QAAQ,CAAC,EAAD,CAAlD,wCAAOI,aAAP,eAAsBC,gBAAtB,eAEA,GAAIC,CAAAA,cAAc,CAAG,KAArB,CAEA,GAAIH,KAAK,CAACI,UAAN,GAAqB,MAArB,EAA+BJ,KAAK,CAACI,UAAN,GAAqB,IAAxD,CAA6D,CAAE;AAC3DD,cAAc,CAAG,IAAjB,CACH,CAED,eAAoCN,QAAQ,CAACM,cAAD,CAA5C,yCAAOC,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAAE;AAClCF,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAb,CACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAEX,KAAK,CAACW,MADI,CAElBC,QAAQ,CAAEL,KAAK,CAACC,MAAN,CAAaC,OAFL,CAAtB,CAIAT,KAAK,CAACa,aAAN,CAAoBH,aAApB,EACH,CAPD,CASA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAAE;AAC9Bd,KAAK,CAACe,YAAN,CAAmBf,KAAK,CAACW,MAAzB,EACH,CAFD,CAIA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAAE;AAC/B,GAAGf,aAAa,GAAK,EAArB,CAAwB,CACpBC,gBAAgB,cACZ,gBAAQ,OAAO,CAAEY,iBAAjB,CAAoC,IAAI,CAAC,QAAzC,CAAkD,SAAS,CAAC,2JAA5D,wBACI,aAAM,SAAS,CAAC,SAAhB,wBADJ,cAEI,YAAK,SAAS,CAAC,SAAf,CAAyB,KAAK,CAAC,4BAA/B,CAA4D,IAAI,CAAC,MAAjE,CAAwE,OAAO,CAAC,WAAhF,CAA4F,MAAM,CAAC,cAAnG,CAAkH,cAAY,MAA9H,uBACI,aAAM,aAAa,CAAC,OAApB,CAA4B,cAAc,CAAC,OAA3C,CAAmD,WAAW,CAAC,GAA/D,CAAmE,CAAC,CAAC,sBAArE,EADJ,EAFJ,GADY,CAAhB,CAQH,CATD,IASO,CACHZ,gBAAgB,CAAC,EAAD,CAAhB,CACH,CACJ,CAbD,CAeA,mBACI,YAAI,EAAE,CAAEF,KAAK,CAACW,MAAd,CAAsB,aAAa,CAAEK,kBAArC,CAAyD,SAAS,CAAC,oDAAnE,WACKf,aADL,cAEI,cAAO,cAAc,CAAEG,UAAvB,CAAmC,EAAE,CAAC,iBAAtC,CAAwD,IAAI,CAAC,UAA7D,CAAwE,QAAQ,CAAEE,gBAAlF,CAAoG,SAAS,CAAC,wCAA9G,EAFJ,cAGI,aAAK,SAAS,CAAC,MAAf,wBACI,UAAG,SAAS,CAAC,uBAAb,UAAsCN,KAAK,CAACiB,QAA5C,EADJ,cAEI,UAAG,SAAS,CAAC,uBAAb,UAAsCjB,KAAK,CAACkB,eAA5C,EAFJ,GAHJ,GADJ,CAUH,CAlDD,CAoDA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport $ from 'jquery';\nimport '../index.css';\n\nconst TaskItem = (props) => {\n\n    const [closeBtnState, setCloseBtnState] = useState('');\n\n    let originalStatus = false;\n\n    if (props.taskStatus === \"true\" || props.taskStatus === true){ //checks taskStatus and sets checkbox accordingly\n        originalStatus = true;\n    }\n\n    const [taskStatus, setTaskStatus] = useState(originalStatus)\n\n    const taskCheckHandler = (event) => { //checks task as done or undone\n        setTaskStatus(event.target.checked); \n        const taskCheckData = {\n            taskId: props.taskId,\n            taskDone: event.target.checked\n        };\n        props.onTaskChecked(taskCheckData);\n    };\n\n    const deleteTaskHandler = () => { //deletes task from client by passing taskId to be deleted\n        props.onTaskDelete(props.taskId);\n    };\n\n    const toggleDeleteButton = () => { //toggles delete todo button\n        if(closeBtnState === ''){\n            setCloseBtnState(\n                <button onClick={deleteTaskHandler} type=\"button\" className=\"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <svg className=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            )\n        } else {\n            setCloseBtnState('');\n        }\n    }\n\n    return (\n        <li id={props.taskId} onDoubleClick={toggleDeleteButton} className=\"flex flex-row items-center mb-5 w-full select-none\">\n            {closeBtnState}\n            <input defaultChecked={taskStatus} id=\"taskCheckStatus\" type=\"checkbox\" onChange={taskCheckHandler} className=\"w-4 h-4 rounded-full focus:ring-1 ml-3\" />\n            <div className=\"ml-3\">\n                <p className=\"text-base font-medium\">{props.taskName}</p>\n                <p className=\"text-xs text-gray-500\">{props.taskDescription}</p>\n             </div>\n        </li>\n    );\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}