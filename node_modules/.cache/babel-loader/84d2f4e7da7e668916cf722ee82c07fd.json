{"ast":null,"code":"import _objectSpread from\"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import $ from'jquery';import'../index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskInput=function TaskInput(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),enteredTask=_useState2[0],setEnteredTask=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),enteredTaskDetails=_useState4[0],setEnteredTaskDetails=_useState4[1];var taskChangeHandler=function taskChangeHandler(event){setEnteredTask(event.target.value);};var taskDescriptionHandler=function taskDescriptionHandler(event){setEnteredTaskDetails(event.target.value);};var closeTaskHandler=function closeTaskHandler(){props.closeNewTask();};var submitHandler=function submitHandler(event){event.preventDefault();var taskData={taskName:enteredTask,taskDescription:enteredTaskDetails,taskStatus:\"testing\",userId:\"testing\"};$.post(\"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/tasks\",taskData,function(result){gotTaskId(result);});var gotTaskId=function gotTaskId(taskId){var uploadedData=_objectSpread(_objectSpread({},taskData),{},{\"id\":taskId});props.onSaveTask(uploadedData);};};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,className:\"form flex flex-row items-center w-full\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:closeTaskHandler,type:\"button\",className:\"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Close menu\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"h-4 w-4\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 flex flex-col w-full\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:taskChangeHandler,className:\"border-0 p-0 text-base font-medium focus:ring-0 text-gray-600\",placeholder:\"Task Name (Hit 'Enter' to add task!)\",type:\"text\"}),/*#__PURE__*/_jsx(\"input\",{onChange:taskDescriptionHandler,className:\"text-xs text-gray-500 p-0 border-0 focus:ring-0\",placeholder:\"Task Description\",type:\"text\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\"})})]});};export default TaskInput;","map":{"version":3,"sources":["/Users/Phil/Documents/Coding Projects/todo-webapp/todo-reactjs/src/components/TaskInput.js"],"names":["React","useState","$","TaskInput","props","enteredTask","setEnteredTask","enteredTaskDetails","setEnteredTaskDetails","taskChangeHandler","event","target","value","taskDescriptionHandler","closeTaskHandler","closeNewTask","submitHandler","preventDefault","taskData","taskName","taskDescription","taskStatus","userId","post","result","gotTaskId","taskId","uploadedData","onSaveTask"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,cAAsCH,QAAQ,CAAC,EAAD,CAA9C,wCAAOI,WAAP,eAAoBC,cAApB,eACA,eAAoDL,QAAQ,CAAC,EAAD,CAA5D,yCAAOM,kBAAP,eAA2BC,qBAA3B,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjCJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACH,CAFD,CAIA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACH,KAAD,CAAW,CACtCF,qBAAqB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB,CACH,CAFD,CAIA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BV,KAAK,CAACW,YAAN,GACH,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACN,KAAD,CAAW,CAC7BA,KAAK,CAACO,cAAN,GAEA,GAAMC,CAAAA,QAAQ,CAAG,CACbC,QAAQ,CAAEd,WADG,CAEbe,eAAe,CAAEb,kBAFJ,CAGbc,UAAU,CAAE,SAHC,CAIbC,MAAM,CAAE,SAJK,CAAjB,CAOApB,CAAC,CAACqB,IAAF,CAAO,qEAAP,CAA8EL,QAA9E,CAAwF,SAASM,MAAT,CAAgB,CACpGC,SAAS,CAACD,MAAD,CAAT,CACH,CAFD,EAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC1B,GAAMC,CAAAA,YAAY,gCACXT,QADW,MAEd,KAAMQ,MAFQ,EAAlB,CAIAtB,KAAK,CAACwB,UAAN,CAAiBD,YAAjB,EACH,CAND,CAOH,CArBD,CAuBA,mBACQ,cAAM,QAAQ,CAAEX,aAAhB,CAA+B,SAAS,CAAC,wCAAzC,wBAEI,gBAAQ,OAAO,CAAEF,gBAAjB,CAAmC,IAAI,CAAC,QAAxC,CAAiD,SAAS,CAAC,2JAA3D,wBACA,aAAM,SAAS,CAAC,SAAhB,wBADA,cAEA,YAAK,SAAS,CAAC,SAAf,CAAyB,KAAK,CAAC,4BAA/B,CAA4D,IAAI,CAAC,MAAjE,CAAwE,OAAO,CAAC,WAAhF,CAA4F,MAAM,CAAC,cAAnG,CAAkH,cAAY,MAA9H,uBACI,aAAM,aAAa,CAAC,OAApB,CAA4B,cAAc,CAAC,OAA3C,CAAmD,WAAW,CAAC,GAA/D,CAAmE,CAAC,CAAC,sBAArE,EADJ,EAFA,GAFJ,cAQI,aAAK,SAAS,CAAC,2BAAf,wBACI,cAAO,QAAQ,CAAEL,iBAAjB,CAAoC,SAAS,CAAC,+DAA9C,CAA8G,WAAW,CAAC,sCAA1H,CAAiK,IAAI,CAAC,MAAtK,EADJ,cAEI,cAAO,QAAQ,CAAEI,sBAAjB,CAAyC,SAAS,CAAC,iDAAnD,CAAqG,WAAW,CAAC,kBAAjH,CAAoI,IAAI,CAAC,MAAzI,EAFJ,GARJ,cAYI,kCACI,eAAQ,IAAI,CAAC,QAAb,EADJ,EAZJ,GADR,CAkBH,CAzDD,CA2DA,cAAeV,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport $ from 'jquery';\nimport '../index.css';\n\nconst TaskInput = (props) => {\n    const [enteredTask, setEnteredTask] = useState('');\n    const [enteredTaskDetails, setEnteredTaskDetails] = useState('');\n\n    const taskChangeHandler = (event) => {\n        setEnteredTask(event.target.value);\n    };\n\n    const taskDescriptionHandler = (event) => {\n        setEnteredTaskDetails(event.target.value);\n    };\n\n    const closeTaskHandler = () => {\n        props.closeNewTask();\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const taskData = {\n            taskName: enteredTask,\n            taskDescription: enteredTaskDetails,\n            taskStatus: \"testing\",\n            userId: \"testing\"\n        };\n\n        $.post(\"https://us-central1-task-manager-api-4f9a8.cloudfunctions.net/tasks\", taskData, function(result){\n            gotTaskId(result);\n        } )\n\n        const gotTaskId = (taskId) => {\n            const uploadedData = {\n                ...taskData,\n                \"id\": taskId\n            }\n            props.onSaveTask(uploadedData);\n        };\n    }\n\n    return(\n            <form onSubmit={submitHandler} className=\"form flex flex-row items-center w-full\">\n                {/* <input type=\"checkbox\" className=\"w-4 h-4 rounded-full focus:ring-1\" /> */}\n                <button onClick={closeTaskHandler} type=\"button\" className=\"bg-white rounded-full items-center justify-center text-gray-500 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\">\n                <span className=\"sr-only\">Close menu</span>\n                <svg className=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n                </button>\n                <div className=\"ml-3 flex flex-col w-full\">\n                    <input onChange={taskChangeHandler} className=\"border-0 p-0 text-base font-medium focus:ring-0 text-gray-600\" placeholder=\"Task Name (Hit 'Enter' to add task!)\" type=\"text\"></input>\n                    <input onChange={taskDescriptionHandler} className=\"text-xs text-gray-500 p-0 border-0 focus:ring-0\" placeholder=\"Task Description\" type=\"text\"></input>\n                </div>\n                <div>\n                    <button type=\"submit\"/>\n                 </div>\n            </form>\n    );\n};\n\nexport default TaskInput;"]},"metadata":{},"sourceType":"module"}